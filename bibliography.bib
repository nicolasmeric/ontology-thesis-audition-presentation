@inproceedings{tlig-2018-autonomous,
  author       = {Tlig, Mohamed and Machin, Mathilde and Kerneis, Romain and Arbaretier, Emmanuel and Zhao, Linda and Meurville, Florent and Van Frank, Jean},
  booktitle    = {2018 48th Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshops (DSN-W)},
  doi          = {10.1109/DSN-W.2018.00012},
  organization = {IEEE},
  pages        = {2-5},
  publisher    = {IEEE},
  title        = {Autonomous Driving System: Model Based Safety Analysis},
  url          = {https://ieeexplore.ieee.org/document/8416197},
  date         = {2018-06-25/2018-06-28},
  location     = {Luxembourg City, Luxembourg},
  issn         = {2325-6664}
}

@mastersthesis{kerneis-2017-scenario-thesis,
  author      = {Kerneis, Romain},
  date        = {2017},
  institution = {{Institut National des Sciences Appliquées (INSA) - Rouen}},
  title       = {Modélisation comportementale pour la sécurisation du véhicule autonome},
  pagetotal   = {44}
}

% Adapted from
% https://www.bibsonomy.org/bibtex/20fe19832911ce8aa67a79694358813aa/mgraube
@manual{horridge2011,
  abstract             = {This guide introduces the Protégé-OWL plugin for creating OWL ontologies. Chapter 3 gives a brief overview of the OWL ontology language. Chapter 4 focuses on building an OWL-DL ontology and using a Description Logic Reasoner to check the consistency of the ontology and automatically compute the ontology class hierarchy. Chapter 6 describes some OWL constructs such as hasValue Restrictions and Enumerated classes, which aren t directly used in the main tutorial. Chapter 7 describes Namespaces, Importing ontologies and various features and utilities of the Protégé-OWL application.},
  added-at             = {2011-11-30T14:51:12.000+0100},
  author               = {
    Horridge, Matthew and Knublauch, H. and Rector, A. and Stevens, R.
    and Wroe, C.
  },
  biburl               = {https://www.bibsonomy.org/bibtex/20fe19832911ce8aa67a79694358813aa/mgraube},
  citeulike-article-id = {121861},
  edition              = {1.3},
  interhash            = {855c233a3e7d044e8677ea81311240ec},
  intrahash            = {0fe19832911ce8aa67a79694358813aa},
  keywords             = {Conceptual Linked_Data MGraube OWL Ontology WP4},
  organization         = {University of Manchester},
  priority             = {0},
  timestamp            = {2012-08-07T08:52:58.000+0200},
  title                = {A Practical Guide To Building OWL Ontologies With The Protege-OWL Plugin},
  url                  = {http://mowl-power.cs.man.ac.uk/protegeowltutorial/resources/ProtegeOWLTutorialP4_v1_3.pdf},
  date                 = {2011-03-24}
}

@online{fiateq-fault-tree-analysis,
  author  = {fiateq},
  title   = {Arbre de défaillance - fault tree analysis (FTA)},
  url     = {http://www.fiateq.com/index.php?id_ssrub=50},
  urldate = {2019-04-15}
}

@inproceedings{oica-2014-autonated-driving,
  author       = {OICA},
  organization = {World Forum for Harmonization of Vehicle Regulations (WP.29)},
  title        = {Automated Driving, definition for levels of automation},
  date         = {2014-03-11/2014-03-14},
  pdf          = {http://www.oica.net/wp-content/uploads/WP-29-162-20-OICA-automated-driving.pdf},
  pdf          = {https://www.unece.org/fileadmin/DAM/trans/doc/2014/wp29/WP.29-162-20.pdf},
  url          = {https://www.unece.org/trans/main/wp29/wp29wgs/wp29gen/geninf162.html}
}

@techreport{iso_2019_sotif,
  author      = {
    {Technical Committee ISO/TC 22}
    and {Subcommittee SC 32}
  },
  date        = {2019},
  institution = {International Organization for Standardization},
  langid      = {english},
  language    = {english},
  location    = {
    Chemin de Blandonnet 8
    1214 Vernier, Geneva, Switzerland
  },
  number      = {ISO/PAS 21448:2019},
  shorttitle  = {{ISO}/{PAS} 21448:2019},
  title       = {Road vehicles \textemdash{} Safety of the intended functionality},
  type        = {Standard},
  url         = {https://www.iso.org/standard/70939.html}
}

@unpublished{loche-hal-01765190,
  title               = {{Architecture E/E et Logicielle pour les Systèmes Temps-Réels à Criticité Multiple : Etude Bibliographique}},
  author              = {Loche, Daniel},
  url                 = {https://hal.laas.fr/hal-01765190},
  note                = {working paper or preprint},
  hal_local_reference = {Rapport LAAS n\textdegree 18109},
  year                = {2018},
  month               = Apr,
  pdf                 = {https://hal.laas.fr/hal-01765190/file/Etude%20Bibliographique_EdSYS.pdf},
  hal_id              = {hal-01765190},
  hal_version         = {v1}
}

@inproceedings{tlig-2018-contribution,
  title       = {
    Contribution à la sécurisation du véhicule autonome:
    Modélisation comportementale avec AltaRica
  },
  author      = {
    Tlig, Mohamed and Machin, Mathilde and Kerneis, Romain
    and Arbaretier, Emmanuel and Zhao, Linda
    and Meurville, Florent and Van Frank, Jean
  },
  langid      = {french},
  language    = {french},
  editor      = {Marle, Leïla},
  url         = {https://hal.archives-ouvertes.fr/hal-02072696},
  booktitle   = {
    Congrès Lambda Mu 21
    "Maîtrise des risques et transformation numérique :
    opportunités et menaces"
  },
  location    = {Reims, France},
  pdf         = {https://hal.archives-ouvertes.fr/hal-02072696/file/lm21_com_5A_1_060_Tlig.pdf},
  hal_id      = {hal-02072696},
  hal_version = {v1},
  date        = {2018-10-04}
}

@report{tlig-2018-behavior-simulation,
  author      = {Tlig, Mohamed and Machin, Mathilde},
  date        = {2018-01-12},
  institution = {{\gls{IRT} SystemX}},
  langid      = {french},
  language    = {french},
  location    = {
    IRT SystemX
    Centre d'intégration Nano-INNOV \textendash{} Bât N3
    8, Avenue de la Vauve \textendash{} CS 90070
    91127 PALAISEAU CEDEX
  },
  number      = {ISX-TA-SVA-LIV-0636},
  pagetotal   = {38},
  title       = {
    Livrable 2.6 : Démarche d'aide à l'évaluation des concepts de sécurité
    à travers une simulation comportementale
  },
  type        = {resreport}
}

@manual{stevens-manchester-2015,
  edition   = {1.1},
  langid    = {english},
  language  = {english},
  title     = {Manchester Family History Advanced {OWL} Tutorial},
  url       = {http://owl.cs.manchester.ac.uk/tutorials/fhkbtutorial/},
  publisher = {University of Manchester},
  author    = {
    Stevens, Robert and Stevens, Margaret
    and Matentzoglu, Nicolas and Jupp, Simon
  },
  date      = {2015-11-25}
}

@online{minenssup-irt-2018,
  author   = {
    {Ministère de l'Enseignement supérieur,
    de la Recherche et de l'Innovation}
  },
  date     = {2018-12-03},
  langid   = {french},
  language = {french},
  location = {
    Ministère de l'Enseignement supérieur,
    de la Recherche et de l'Innovation
    1 rue Descartes
    75231 Paris cedex 05
  },
  title    = {\acrlongpl{IRT}},
  url      = {https://www.enseignementsup-recherche.gouv.fr/cid56375/instituts-de-recherche-technologique.html},
  urldate  = {2019-11-04}
}

@article{Ulbrich2015,
  abstract      = {
    For the design and test of functional modules of an automated vehicle,
    it is essential to define interfaces.
    While interfaces on the perception side,
    like object lists, point clouds or occupancy grids, are
    to a certain degree settled already,
    they are quite vague in the consecutive steps of context modeling
    and in particular on the side of driving execution.
    The authors consider the scene as the central interface
    between perception and behavior planning {\&} control.
    Within the behavior planning {\&} control block,
    a situation is a central data container.
    A scenario is a common approach to substantiate
    test cases for functional modules
    and can be used to detail the functional description of a system.
    However, definitions of these terms are often-at best-vague
    or even contradictory.
    This paper will review these definitions and come up
    with a consistent definition for each term.
    Moreover, we present an example for the implementation
    of each of these interfaces.
  },
  author        = {
    Ulbrich, Simon and Menzel, Till and Reschka,
    Andreas and Schuldt, Fabian and Maurer, Markus
  },
  doi           = {10.1109/ITSC.2015.164},
  isbn          = {9781467365956},
  journal       = {
    IEEE Conference
    on Intelligent Transportation Systems, Proceedings, ITSC
  },
  keywords      = {model,scenario,scene,situation},
  mendeley-tags = {model,scenario,scene,situation},
  number        = {November},
  pages         = {982--988},
  title         = {
    {Defining and Substantiating the Terms Scene, Situation, and Scenario for Automated Driving}
  },
  volume        = {2015-Octob},
  year          = {2015}
}

@article{Menzel2018,
  abstract      = {
    The latest version of the ISO 26262 standard from 2016 represents
    the state of the art for a safety-guided development
    of safety-critical electric/electronic vehicle systems.
    These vehicle systems include
    advanced driver assistance systems and vehicle guidance systems.
    The development process proposed in the ISO 26262 standard is based upon
    multiple V-models, and defines activities and work products
    for each process step.
    In many of these process steps, scenario based approaches can be applied
    to achieve the defined work products
    for the development of automated driving functions.
    To accomplish the work products of different process steps,
    scenarios have to focus on various aspects
    like a human understandable notation or a description via state variables.
    This leads to contradictory requirements
    regarding the level of detail and way of notation
    for the representation of scenarios.
    In this paper, the authors discuss requirements
    for the representation of scenarios in different process steps
    defined by the ISO 26262 standard,
    propose a consistent terminology based on prior publications
    for the identified levels of abstraction,
    and demonstrate how scenarios can be systematically evolved
    along the phases of the development process
    outlined in the ISO 26262 standard.
  },
  archiveprefix = {arXiv},
  arxivid       = {1801.08598},
  author        = {Menzel, Till and Bagschik, Gerrit and Maurer, And Markus},
  doi           = {10.1109/IVS.2018.8500406},
  eprint        = {1801.08598},
  isbn          = {9781538644522},
  journal       = {IEEE Intelligent Vehicles Symposium, Proceedings},
  pages         = {1821--1827},
  title         = {
    {Scenarios for Development, Test and Validation of Automated Vehicles}
  },
  volume        = {2018-June},
  year          = {2018}
}

@manual{J3016_201806,
  author   = {\acrshort{ORAD}},
  title    = {
    Taxonomy and Definitions for Terms Related to Driving Automation Systems
    for On-Road Motor Vehicles
  },
  date     = {2018-06},
  langid   = {english},
  language = {english},
  doi      = {https://doi.org/10.4271/J3016_201806},
  url      = {https://doi.org/10.4271/J3016_201806},
  abstract = {
    This SAE Recommended Practice describes motor vehicle driving automation
    systems that perform part or all of the dynamic driving task (DDT) on a
    sustained basis. It provides a taxonomy with detailed definitions for six
    levels of driving automation, ranging from no driving automation (level 0)
    to full driving automation (level 5), in the context of motor vehicles
    (hereafter also referred to as “vehicle” or “vehicles”) and their operation
    on roadways. These level definitions, along with additional supporting terms
    and definitions provided herein, can be used to describe the full range of
    driving automation features equipped on motor vehicles in a functionally
    consistent and coherent manner. “On-road” refers to publicly accessible
    roadways (including parking areas and private campuses that permit public
    access) that collectively serve users of vehicles of all classes and driving
    automation levels (including no driving automation), as well as
    motorcyclists, pedal cyclists, and pedestrians.
    The levels apply to the driving automation feature(s) that are engaged in
    any given instance of on-road operation of an equipped vehicle. As such,
    although a given vehicle may be equipped with a driving automation system
    that is capable of delivering multiple driving automation features that
    perform at different levels, the level of driving automation exhibited in
    any given instance is determined by the feature(s) that are engaged.
    This document also refers to three primary actors in driving: the (human)
    user, the driving automation system, and other vehicle systems and
    components. These other vehicle systems and components (or the vehicle in
    general terms) do not include the driving automation system in this model,
    even though as a practical matter a driving automation system may actually
    share hardware and software components with other vehicle systems, such as a
    processing module(s) or operating code.
    The levels of driving automation are defined by reference to the specific
    role played by each of the three primary actors in performance of the DDT
    and/or DDT fallback. “Role” in this context refers to the expected role of a
    given primary actor, based on the design of the driving automation system in
    question and not necessarily to the actual performance of a given primary
    actor. For example, a driver who fails to monitor the roadway during
    engagement of a level 1 adaptive cruise control (ACC) system still has the
    role of driver, even while s/he is neglecting it.
    Active safety systems, such as electronic stability control and automated
    emergency braking, and certain types of driver assistance systems, such as
    lane keeping assistance, are excluded from the scope of this driving
    automation taxonomy because they do not perform part or all of the DDT on a
    sustained basis and, rather, merely provide momentary intervention during
    potentially hazardous situations. Due to the momentary nature of the actions
    of active safety systems, their intervention does not change or eliminate
    the role of the driver in performing part or all of the DDT, and thus are
    not considered to be driving automation.
    It should, however, be noted that crash avoidance features, including
    intervention-type active safety systems, may be included in vehicles
    equipped with driving automation systems at any level. For Automated Driving
    System (ADS) features (i.e., levels 3-5) that perform the complete DDT,
    crash avoidance capability is part of ADS functionality.
  }
}

@article{Damm707,
  author   = {Damm, Werner and Harel, David},
  journal  = {Formal Methods in System Design 2001},
  keywords = {formal specification,sequence charts,uml},
  number   = {April 1998},
  title    = {{LSCs : Breathing Life into Message Sequence Charts}}
}

@article{Menzel2019,
  abstract        = {
    Scenario-based development and test processes are
    a promising approach for verifying and validating
    automated driving functions.
    For this purpose, scenarios have to be generated
    during the development process in a traceable manner.
    In early development stages,
    the operating scenarios of the item to be developed are
    usually described in an abstract, linguistic way.
    Within the scope of a simulation-assisted test process,
    these linguistically described scenarios have to be transformed
    into a state space representation
    and converted into data formats
    which can be used with the respective simulation environment.
    Currently, this step of detailing scenarios takes
    a considerable manual effort.
    Furthermore, a standardized interpretation
    of the linguistically described scenarios
    and a consistent transformation into the data formats are not
    guaranteed due to multiple authors as well as many constraints
    between the scenario parameters.
    In this paper, the authors present an approach
    to automatically detail a keyword-based scenario description
    for execution in a simulation environment
    and provide a basis for test case generation.
    As a first step, the keyword-based description is transformed
    into a parameter space representation.
    At the same time, constraints regarding
    the selection and combination of parameter values are
    documented for the following process steps
    (e. g. evolutionary or stochastic test methods).
    As a second step, the parameter space representation is converted
    into data formats required by the simulation environment.
    As an example, the authors use scenarios on German freeways
    and convert them into the data formats OpenDRIVE (description of the road)
    and OpenSCENARIO
    (description of traffic participants and environmental conditions)
    for execution in the simulation environment Virtual Test Drive.
  },
  archiveprefix   = {arXiv},
  arxivid         = {1905.03989},
  author          = {
    Menzel, Till and Bagschik, Gerrit and Isensee, Leon
    and Schomburg, Andre and Maurer, Markus
  },
  doi             = {10.1109/IVS.2019.8814099},
  eprint          = {1905.03989},
  isbn            = {9781728105604},
  journal         = {IEEE Intelligent Vehicles Symposium, Proceedings},
  mendeley-groups = {Conference/IEEE Intelligent Vehicles Symposium/2019},
  pages           = {2383--2390},
  title           = {
    {From functional to logical scenarios:
    Detailing a keyword-based scenario description
    for execution in a simulation environment}
  },
  volume          = {2019-June},
  year            = {2019}
}

@article{Bagschik2018,
  abstract        = {
    The introduction of automated vehicles
    without permanent human supervision demands
    a functional system description,
    including functional system boundaries
    and a comprehensive safety analysis.
    These inputs to the technical development can be identified
    and analyzed by a scenario-based approach.
    Furthermore, to establish an economical test and release process,
    a large number of scenarios must be identified to obtain
    meaningful test results.
    Experts are doing well to identify scenarios
    that are difficult to handle or unlikely to happen.
    However, experts are unlikely to identify all scenarios possible
    based on the knowledge they have on hand.
    Expert knowledge modeled for computer aided processing may help
    for the purpose of providing a wide range of scenarios.
    This contribution reviews ontologies as knowledge-based systems
    in the field of automated vehicles,
    and proposes a generation of traffic scenes
    in natural language as a basis for a scenario creation.
  },
  archiveprefix   = {arXiv},
  arxivid         = {1704.01006},
  author          = {Bagschik, Gerrit and Menzel, Till and Maurer, Markus},
  doi             = {10.1109/IVS.2018.8500632},
  eprint          = {1704.01006},
  isbn            = {9781538644522},
  journal         = {IEEE Intelligent Vehicles Symposium, Proceedings},
  keywords        = {generation,ontology,scenario,validation},
  mendeley-groups = {Conference/IEEE Intelligent Vehicles Symposium/2018},
  mendeley-tags   = {generation,ontology,scenario,validation},
  pages           = {1813--1820},
  title           = {
    {Ontology based Scene Creation for the Development of Automated Vehicles}
  },
  volume          = {2018-June},
  year            = {2018}
}

@article{Matthaei2015AutonomousD,
  title   = {Autonomous driving – a top-down-approach},
  author  = {Richard Matthaei and Markus Maurer},
  journal = {at - Automatisierungstechnik},
  year    = {2015},
  volume  = {63},
  pages   = {155 - 167}
}

@inproceedings{ulbrich-2014-graph-based,
  author    = {S. {Ulbrich} and T. {Nothdurft} and M. {Maurer} and P. {Hecker}},
  booktitle = {2014 IEEE Intelligent Vehicles Symposium Proceedings},
  title     = {
    Graph-based context representation,
    environment modeling and information aggregation for automated driving
  },
  year      = {2014},
  volume    = {},
  number    = {},
  pages     = {541-547}
}

@inproceedings{DBLP:conf/ic3k/ChenK18,
  author    = {Chen, Wei and Kloul, Leïla},
  title     = {
    An Ontology-based Approach to Generate
    the Advanced Driver Assistance Use Cases of Highway Traffic
  },
  langid    = {english},
  language  = {english},
  booktitle = {
    Proceedings of the 10th International Joint Conference
    on Knowledge Discovery, Knowledge Engineering and Knowledge Management,
    {IC3K} 2018, Volume 2: KEOD, Seville, Spain, September 18-20, 2018
  },
  pages     = {73-81},
  year      = {2018},
  crossref  = {DBLP:conf/ic3k/2018keod},
  url       = {https://doi.org/10.5220/0006931700730081},
  doi       = {10.5220/0006931700730081},
  timestamp = {Mon, 01 Oct 2018 13:54:58 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/ic3k/ChenK18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/medi/Ait-SadouneM19,
  author    = {Idir Aït{-}Sadoune and Linda Mohand{-}Oussaïd},
  title     = {
    Building Formal Semantic Domain Model: An Event-B Based Approach
  },
  booktitle = {
    Model and Data Engineering - 9th International Conference, {MEDI}
    2019, Toulouse, France, October 28-31, 2019, Proceedings
  },
  pages     = {140-155},
  date      = {2019},
  url       = {https://doi.org/10.1007/978-3-030-32065-2_10},
  doi       = {10.1007/978-3-030-32065-2_10},
  timestamp = {Tue, 22 Oct 2019 15:54:10 +0200},
  biburl    = {https://dblp.org/rec/conf/medi/Ait-SadouneM19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{BruckerWolff.Design-SEFM19,
  author    = {Brucker, Achim D. and Wolff, Burkhart},
  editor    = {Ölveczky, Peter Csaba and Salaün, Gwen},
  title     = {Isabelle/DOF: Design and Implementation},
  booktitle = {Software Engineering and Formal Methods},
  date      = {2019},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {275-292},
  abstract  = {
    DOF is a novel framework for defining ontologies and enforcing them during
    document development and document evolution.
    A major goal of DOF is
    the integrated development of formal certification documents
    (e. g., for Common Criteria or CENELEC 50128) that require
    consistency across both formal and informal arguments.
  },
  isbn      = {978-3-030-30446-1}
}

@inproceedings{Brucker-ea.Using-CICM18,
  author    = {
    Brucker, Achim D. and Ait-Sadoune, Idir
    and Crisafulli, Paolo and Wolff, Burkhart
  },
  editor    = {
    Rabe, Florian and Farmer, William M.
    and Passmore, Grant O. and Youssef, Abdou
  },
  title     = {Using the Isabelle Ontology Framework},
  booktitle = {Intelligent Computer Mathematics},
  date      = {2018},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {23-38},
  abstract  = {
    While Isabelle is mostly known as part of Isabelle/HOL
    (an interactive theorem prover), it actually provides
    a framework for developing a wide spectrum of applications.
    A particular strength of the Isabelle framework is
    the combination of text editing, formal verification, and code generation.
  },
  isbn      = {978-3-319-96812-4}
}
